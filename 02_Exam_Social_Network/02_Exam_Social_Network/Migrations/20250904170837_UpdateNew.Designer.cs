// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _02_Exam_Social_Network.Data;

#nullable disable

namespace _02_Exam_Social_Network.Migrations
{
    [DbContext(typeof(SNetworkDbContext))]
    [Migration("20250904170837_UpdateNew")]
    partial class UpdateNew
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.Coment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Coments");
                });

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.PostImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("PostImages");
                });

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "rubelmaksum2404@gmail.com",
                            ImgUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQNL-OXfUdlkKCgDFYV9WXavaJucZsprpGiTA&s",
                            Name = "Maksym",
                            NickName = "maxyyy42",
                            Password = "TestPass22"
                        },
                        new
                        {
                            Id = 2,
                            Email = "rubelmaksum1@gmail.com",
                            ImgUrl = "https://randomuser.me/api/portraits/men/14.jpg",
                            Name = "Igor",
                            NickName = "igor21",
                            Password = "TestPass22"
                        },
                        new
                        {
                            Id = 3,
                            Email = "rubelmaksum2@gmail.com",
                            ImgUrl = "https://randomuser.me/api/portraits/men/45.jpg",
                            Name = "Denys",
                            NickName = "denys88",
                            Password = "TestPass22"
                        },
                        new
                        {
                            Id = 4,
                            Email = "rubelmaksum3@gmail.com",
                            ImgUrl = "https://randomuser.me/api/portraits/men/52.jpg",
                            Name = "Petya",
                            NickName = "petya09",
                            Password = "TestPass22"
                        },
                        new
                        {
                            Id = 5,
                            Email = "rubelmaksum4@gmail.com",
                            ImgUrl = "https://randomuser.me/api/portraits/women/21.jpg",
                            Name = "Vika",
                            NickName = "vika_sun",
                            Password = "TestPass22"
                        },
                        new
                        {
                            Id = 6,
                            Email = "rubelmaksum5@gmail.com",
                            ImgUrl = "https://randomuser.me/api/portraits/women/35.jpg",
                            Name = "Katya",
                            NickName = "katya_star",
                            Password = "TestPass22"
                        });
                });

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.Coment", b =>
                {
                    b.HasOne("_02_Exam_Social_Network.Data.Entities.Post", "Post")
                        .WithMany("Coments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_02_Exam_Social_Network.Data.Entities.User", "User")
                        .WithMany("Coments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.Post", b =>
                {
                    b.HasOne("_02_Exam_Social_Network.Data.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.PostImage", b =>
                {
                    b.HasOne("_02_Exam_Social_Network.Data.Entities.Post", "Post")
                        .WithMany("ImgUrls")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.Post", b =>
                {
                    b.Navigation("Coments");

                    b.Navigation("ImgUrls");
                });

            modelBuilder.Entity("_02_Exam_Social_Network.Data.Entities.User", b =>
                {
                    b.Navigation("Coments");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
